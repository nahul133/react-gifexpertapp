{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","root","document","getElementById","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAEvCN,EAAc,MAQlB,SACG,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBe,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCHjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCHRO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECDwB,SAAEA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OApBDC,qBAAW,WAERxB,EAASC,GACJwB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACTf,KAAMkB,EACNL,SAAQ,MAGT,UAIX,CAACpB,IAIIqB,ED1ByBM,CAAc3B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACA,6BAAMpB,IAELoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEetBiB,EA3BM,WAEjB,MAAoC1C,mBAAS,CAAC,+BAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAGA,OACM,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEI,6BAEU4C,EAAWpB,KAAK,SAAAoB,GAAU,OACtB,cAAC,EAAD,CAEK7B,SAAW6B,GADLA,YChBrCC,G,MAAOC,SAASC,eAAe,SAErCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.4ee03cba.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories( cats => [inputValue, ...cats ] );\r\n\r\n            setInputValue('')\r\n        }\r\n\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit ={handleSubmit}>\r\n           <input \r\n               type='text'\r\n               value={inputValue}\r\n               onChange={ handleInputChange}\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n        \r\n    }\r\n\r\n","\r\n\r\n\r\n\r\n\r\n export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=xHBTVG99MiJ40CjpkdlNnKh7JVYUTyLQ`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__backInLeft'>\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n   \r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n\r\n        {loading && <p className='animate__animated animate__hinge'>Loading...</p>}\r\n\r\n        <div className='card-grid'>\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img}\r\n                                 />\r\n                    ))\r\n                }\r\n        </div>\r\n       </>  \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  \r\n     const [state, setstate] = useState({\r\n         data: [],\r\n         loading: true\r\n     });\r\n\r\n    useEffect( () => {\r\n\r\n       getGifs( category )\r\n           .then(imgs => {\r\n\r\n               setTimeout(() => {\r\n\r\n                   setstate({\r\n                   data: imgs,\r\n                   loading:false\r\n\r\n               })\r\n               }, 2000);\r\n               \r\n           })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n     return state; // {data, loading};\r\n      \r\n\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n//FC\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Encuentra Los Mejores Gifs']);\r\n    \r\n\r\n    return( \r\n          <>\r\n              <h2>GifExpertApp</h2>\r\n              <AddCategory setCategories={ setCategories} />\r\n              <hr />\r\n\r\n                  <ol>\r\n                        {\r\n                            categories.map( categories => (\r\n                                <GifGrid\r\n                                     key= {categories}\r\n                                     category= {categories}\r\n                                />\r\n                            ))\r\n                        }\r\n                  </ol>\r\n              \r\n           </>\r\n                     )\r\n                    }\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nconst root = document.getElementById('root')\r\n\r\nReactDOM.render(<GifExpertApp />, root );"],"sourceRoot":""}